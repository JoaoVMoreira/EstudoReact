<INTRODUÇÃO>

- ReactJS é baseada em componentes.

- É necessário ter o NODE JS instalado na maquina para atuar com ReactJS.

Criação de um novo app React:

npx create-react-app my-app
cd my-app
npm start

-----------------------------------------------------------
<AULA 1>



// Criação de componente 
//O componente está sendo anunciado logo apos o H1

//Para anunciar uma props deve-se alocar o nome "props como parâmetro, informa-la dentro do conteudo a ser inserido e defini-la no momento do anuncio do componente"

const BemVindo = (props) => {
  return(
      <div>
          <Sobre username={props.nome} cargo={props.cargo} idade={props.idade} salario={props.salario}/>
          <Social link={props.link}/>
      </div>
  );
}

const Sobre = (props) => {
  return(
      <div>
        <h1>Meu nome é: {props.nome}</h1>
        <h2>Tenho: {props.idade} anor</h2>
        <h2>Meu cargo atual é: {props.cargo}</h2>
        <h2>Atualmente ganho: {props.salario}</h2>
      </div>
  );
}

const Social = (props) => {
  return(
    <div>
      <a href={props.link}>Facebook </a>
      <a href={props.link}>Instagram </a>
      <a href={props.link}>Youtube </a>
    </div>
  )
}

export default function App(){
  return(
    <div>
      <BemVindo nome="João" cargo="Programador JR" idade="20" salario="3500" link="https://google.com.br"/>
    </div>
  )
}


-----------------------------------------------------------
<AULA 2>

//Criando class component

class Equipe extends Component{
  render(){
    return(
      <div>
        <Sobre nome={this.props.nome} cargo={this.props.cargo} idade={this.props.idade} />
      </div>
    );
  }
}


class Sobre extends Component{
  render(){
    return(
      <div>
        <h2>Olá, sou o {this.props.nome}!</h2>
        <h3>Cargo: {this.props.cargo}</h3>
        <h3>Idade: {this.props.idade}</h3>
      </div>
    );
  }
}

export default function App(){
  return(
    <div>
      <Equipe nome="Luan" cargo="Programador JR" idade="20"/>
    </div>
  )
}



-----------------------------------------------------------
<AULA 3> contador 

import React, { Component } from "react";

class App extends Component{

  constructor(props){
    super(props);
      this.state = {
        nome:'João',
        contador: 0
      };

      this.aumentar = this.aumentar.bind(this);
      this.diminuir = this.diminuir.bind(this)

  }

  //Aumentar
  aumentar(){
    let state = this.state;
    state.contador += 1
    this.setState(state)
  }

  //Diminuir
  diminuir(){
    let state = this.state;
    state.contador -= 1
    if(state.contador === 0){
      alert('Você chegou em 0!')
      return
    }
    this.setState(state)
    
  }

  render(){
    return(
      <div>
        <h1>{this.state.nome}</h1>

        <h3><button onClick={this.aumentar}>+</button>{this.state.contador}<button onClick={this.diminuir}>-</button></h3>

      </div>
    );
  }
}

export default App;

-----------------------------------------------------------
<AULA 4> Ciclo de vida dos componentes

import React, { Component } from "react";

class App extends Component{
  constructor(props){
    super(props);
    this.state = {
      hora: '00:00:00'
    };
  }

  //É rodado somente na montagem do componente
  componentDidMount(){

    setInterval(() => {
      this.setState({hora: new Date().toLocaleTimeString() })
    }, 1000);
  }

  //Sempre que o componente for atualizado
  componentDidUpdate(){
    console.log('atualizou')
  }

  //O componente deve atualizar?
  shouldComponentUpdate(){
    
  }

  render(){
    return(
      <div>
        <h1>Meu projeto {this.state.hora}</h1>
      </div>
    );
  }
}

export default App;

-----------------------------------------------------------
<AULA 5> Entrar - Sair

import React, { Component } from "react";

class Membro extends Component {

    constructor(props){
        super(props);
        this.state = {
            nome: props.nome
        };
        this.entrar = this.entrar.bind(this);
        this.sair = this.sair.bind(this);
    }

    entrar(){
        this.setState({nome: 'João'})
    }

    sair(){
        if(this.nome != 'vizitante'){
            this.setState({nome: 'vizitante'})
        }else if(this.nome === 'vizitante'){
            alert('Voc~e não está logado(a)!')
            return
        }
    }

    render() {
        return (
            <div>
                <h2>Bem vindo(a) {this.state.nome}</h2>
                <button onClick={this.entrar}>Entrar</button>
                <button onClick={this.sair}>Sair</button>
            </div>
        );
    }
}

export default Membro;


+++++++++++++++++++++++++++++++++++

import React, { Component } from "react";
import Membro from "./components/Membro/membro";

class App extends Component{
  render(){
    return(
      <div>
        <Membro nome='vizitante' />
      </div>
    );
  }
}

export default App;

-----------------------------------------------------------
<AULA 5> Renderização condicional 

import React, { Component } from "react";

class App extends Component{

  constructor(props){
    super(props);
    this.state = {
      status: false
    };

    this.sair = this.sair.bind(this);
    this.entrar = this.entrar.bind(this);
    
  }

  sair(){
    this.setState({status: false});
  }

  entrar() {
    this.setState({ status: true });
  }

  render(){
    return(
      <div>
        {this.state.status ?
        <div>
          <h2>Bem vindo ao sistema</h2>
          <button onClick={this.sair}>Sair</button>
        </div> :
        <div>
          <h2>Olá visitante</h2>
          <button onClick={this.entrar}>Entrar</button>
        </div>}
      </div>
    );
  }
}

export default App;

-----------------------------------------------------------
<AULA 6> Listas

import React, { Component } from "react"

class Feed extends Component{

    render(){
        return(
            <div key={this.props.id}>
                <h2>{this.props.username}</h2>
                <h3>{this.props.curtidas} curtidas / {this.props.comentarios} comentarios</h3>

            </div>
        );
    }
}

export default Feed

import React, {Component} from "react"
import Feed from "./components/Membro/componentes/feed";

class App extends Component{

  constructor(props){
    super(props)
    this.state = {
      feed:[
        {id: 1, username: 'João', curtidas: 12, comentarios: 2},
        {id: 2, username: 'Laura', curtidas: 82, comentarios: 20},
        {id: 3, username: 'Matheus', curtidas: 200, comentarios: 30},
        ]
    }
  }

  render(){
    return(
      <div>
        {this.state.feed.map((item)=>{
          return(
            <Feed id={item.id} username={item.username} curtidas={item.curtidas} comentarios={item.comentarios} />
          );
        })}
      </div>
    );
  }
}

export default App;

-----------------------------------------------------------
<AULA 6> Listas Manipulando formulários

import React, { Component } from "react"

class App extends Component{
  constructor(props){
    super(props)
    this.state = {
      email: '',
      senha: '',
      sexo: '',
    }

    this.trocaEmail = this.trocaEmail.bind(this);
    this.trocaSenha = this.trocaSenha.bind(this);
    this.trocaSexo = this.trocaSexo.bind(this);
  }

  trocaEmail(evento){
    let valorDigitado = evento.target.value;
    this.setState({email: valorDigitado});

  }

  trocaSenha(evento){
    let valorDigitado = evento.target.value
    this.setState({senha: valorDigitado})
  }

  trocaSexo(evento){
    let Sexo = evento.target.value
    this.setState({sexo: Sexo})  
  }

  render(){
    return(
      <div>
        <h2>Login</h2>
        Email:
        <input type={'email'} name='email' value={this.state.email} onChange={this.trocaEmail} /> <br/>

        Senha:
        <input type={'password'} name='senha' value={this.state.senha} onChange={this.trocaSenha}/> <br/>

        Sexo:
        <select name="sexo" value={this.state.sexo} onChange={this.trocaSexo}>
          <option value={'masculino'}>Masculino</option>
          <option value={'feminino'}>Feminino</option>
        </select>
        
      </div>
    );
  }
}

export default App;



-----------------------------------------------------------
<AULA 6> Manipulando formulários praticando

import React, { Component } from "react"

class App extends Component{
  constructor(){
    super()
    this.state={
      nome: '',
      email: '',
      senha: '',
    }

    this.cadastrar = this.cadastrar.bind(this)
  }

  cadastrar(event){

    if (this.state.nome != '' && this.state.email != '' && this.state.senha != ''){
      alert(`Nome: ${this.state.nome} \nE-mail: ${this.state.email} \nSenha: ${this.state.senha}`)
    }else{
      alert('É necessário preencher todos os campos')
    }
    
    event.preventDefault()
  }

  render(){
    return(
      <div>
        <h2>Login</h2>

        <form onSubmit={this.cadastrar}>
          <label>Nome:</label>
          <input type={'text'} value={this.state.nome} onChange={(e) => this.setState({nome: e.target.value})} placeholder='Nome'/> <br/>
          <label>E-mail:</label>
          <input type={'email'} value={this.state.email} onChange={(e) => this.setState({ email: e.target.value })} placeholder='E-mail'/> <br />
          <label>Senha:</label>
          <input type={'password'} value={this.state.senha} onChange={(e) => this.setState({ senha: e.target.value })} placeholder='Senha'/> <br/>
          <button type="submit">Cadastrar</button>
        </form>

      </div>
    );
  }
}

export default App

-----------------------------------------------------------
<AULA 7> Manipulando formulários 2

import React, { Component } from "react";

class App extends Component {
  constructor(props) {
    super(props)
    this.state = {
      form:{
        nome: '',
        email: '',
        senha: '',
        sexo: '',
      }
    }

    this.dadosForm = this.dadosForm.bind(this)
  }

  dadosForm(e){
    let form = this.state.form
    form[e.target.name] = e.target.value
    this.setState = ({form: form})
  }

  render() {
    return (
      <div>
        <h2>Login</h2>
        Nome: 
        <input type={'text'} name='nome' value={this.state.form.nome} onChange={this.dadosForm} /> <br />
        Email:
        <input type={'email'} name='email' value={this.state.form.email} onChange={this.dadosForm} /> <br />

        Senha:
        <input type={'password'} name='senha' value={this.state.form.senha} onChange={this.dadosForm} /> <br />

        Sexo:
        <select name="sexo" value={this.state.form.sexo} onChange={this.dados.form}>
          <option value={'masculino'}>Masculino</option>
          <option value={'feminino'}>Feminino</option>
        </select>

      </div>
    );
  }
}

export default App;


----------------------------------------------------------------------------------------------------------------


Biblioteca de rotas = npm install react-router-dom